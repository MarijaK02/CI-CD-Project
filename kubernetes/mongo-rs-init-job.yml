apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-rs-init
  namespace: subjects-app-namespace
spec:
  backoffLimit: 6
  template:
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: mongo-keyfile
          secret:
            secretName: mongo-keyfile
      containers:
        - name: rs-init
          image: mongo:6
          volumeMounts:
          - name: mongo-keyfile
            mountPath: /etc/secrets
            subPath: mongo-keyfile
            readOnly: true
          command: ["bash", "-c"]
          args:
            - |
              set -euo pipefail
              PRIMARY_HOST="mongo-0.mongo.subjects-app-namespace.svc.cluster.local:27017"
              MEMBER1="mongo-1.mongo.subjects-app-namespace.svc.cluster.local:27017"

              until mongosh --host "$PRIMARY_HOST" --keyFile /etc/secrets/mongo-keyfile "db.adminCommand('ping')" >/dev/null 2>&1; 
              do
                echo "waiting for mongo-0..."
                sleep 2
              done

              cfg='{ _id: "rs0", members: [ { _id: 0, host: "'"$PRIMARY_HOST"'" }, { _id: 1, host: "'"$MEMBER1"'" } ] }'
              mongosh --host "$PRIMARY_HOST" --keyFile /etc/secrets/mongo-keyfile --eval "try { rs.initiate($cfg); } catch(e) { print(e); }"

              until mongosh --host "$MEMBER1" --keyFile /etc/secrets/mongo-keyfile "db.adminCommand('ping')" >/dev/null 2>&1; 
              do
                echo "waiting for mongo-1..."
                sleep 2
              done
              mongosh --host "$MEMBER1" --keyFile /etc/secrets/mongo-keyfile --eval 'try { db.getMongo().setReadPref("primaryPreferred"); } catch(e) { print(e); }'
              exit 0